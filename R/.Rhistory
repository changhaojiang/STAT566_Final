knitr::opts_chunk$set(echo = TRUE)
diabetes %>% filter(score > 0.4112) %>% summarise(n=n())
library(data.table)
library(randomForest)
library(dplyr)
data_dir <- "~/Documents/STAT566/Project"
balanced_diabetes <- fread(file.path(data_dir, "diabetes_binary_5050split_health_indicators_BRFSS2015.csv"))
diabetes <- fread(file.path(data_dir,"diabetes_binary_health_indicators_BRFSS2015.csv"))
dim(balanced_diabetes)
balanced_diabetes[1:3,]
dim(diabetes)
diabetes[1:3,]
set.seed(1)
fit.forest= randomForest(Diabetes_binary ~ HvyAlcoholConsump + Smoker +
PhysActivity + Fruits + Veggies,
data = balanced_diabetes, na.action = na.roughfix)
importance(fit.forest)
w1 = importance(fit.forest)[1]/sum(importance(fit.forest))
w2 = importance(fit.forest)[2]/sum(importance(fit.forest))
w3 = importance(fit.forest)[3]/sum(importance(fit.forest))
w4 = importance(fit.forest)[4]/sum(importance(fit.forest))
w5 = importance(fit.forest)[5]/sum(importance(fit.forest))
score = -diabetes$HvyAlcoholConsump * w1 - diabetes$Smoker * w2 +
diabetes$PhysActivity * w3 + diabetes$Fruits * w4 + diabetes$Veggies * w5
summary(score)
hist(score)
score
diabetes %>% filter(score > 0.4112) %>% summarise(n=n())
diabetes %>% filter(score <= 0.4112) %>% summarise(n=n())
diabetes$score <- score
sum(diabetes[diabetes$score<=mean(diabetes$score),]$Diabetes_binary==1)
sum(diabetes[diabetes$score>mean(diabetes$score),]$Diabetes_binary==1)
# Example variable
variable <- c(2, 5, 3, 1, 4)   # Replace with your own variable
# Calculate the mean of the variable
mean_value <- mean(variable)
# Create a new variable with values greater than mean as 1 and less than mean as 0
new_variable <- ifelse(variable > mean_value, 1, 0)
# Print the new variable
print(new_variable)
data_dir <- "~/Documents/STAT566/Project"
balanced_diabetes <- fread(file.path(data_dir, "diabetes_binary_5050split_health_indicators_BRFSS2015.csv"))
diabetes <- fread(file.path(data_dir,"diabetes_binary_health_indicators_BRFSS2015.csv"))
dim(balanced_diabetes)
balanced_diabetes[1:3,]
dim(diabetes)
diabetes[1:3,]
set.seed(1)
fit.forest= randomForest(Diabetes_binary ~ HvyAlcoholConsump + Smoker +
PhysActivity + Fruits + Veggies,
data = balanced_diabetes, na.action = na.roughfix)
importance(fit.forest)
w1 = importance(fit.forest)[1]/sum(importance(fit.forest))
w2 = importance(fit.forest)[2]/sum(importance(fit.forest))
w3 = importance(fit.forest)[3]/sum(importance(fit.forest))
w4 = importance(fit.forest)[4]/sum(importance(fit.forest))
w5 = importance(fit.forest)[5]/sum(importance(fit.forest))
score = -balanced_diabetes$HvyAlcoholConsump * w1 -
balanced_diabetes$Smoker * w2 +
balanced_diabetes$PhysActivity * w3 + balanced_diabetes$Fruits * w4 +
balanced_diabetes$Veggies * w5
summary(score)
hist(score)
set.seed(1)
fit.forest= randomForest(Diabetes_binary ~ HvyAlcoholConsump + Smoker +
PhysActivity + Fruits + Veggies,
data = balanced_diabetes, na.action = na.roughfix)
importance(fit.forest)
w1 = importance(fit.forest)[1]/sum(importance(fit.forest))
w2 = importance(fit.forest)[2]/sum(importance(fit.forest))
w3 = importance(fit.forest)[3]/sum(importance(fit.forest))
w4 = importance(fit.forest)[4]/sum(importance(fit.forest))
w5 = importance(fit.forest)[5]/sum(importance(fit.forest))
score = -balanced_diabetes$HvyAlcoholConsump * w1 -
balanced_diabetes$Smoker * w2 +
balanced_diabetes$PhysActivity * w3 + balanced_diabetes$Fruits * w4 +
balanced_diabetes$Veggies * w5
summary(score)
hist(score)
set.seed(1)
fit.forest= randomForest(Diabetes_binary ~ HvyAlcoholConsump + Smoker +
PhysActivity + Fruits + Veggies,
data = balanced_diabetes, na.action = na.roughfix)
importance(fit.forest)
w1 = importance(fit.forest)[1]/sum(importance(fit.forest))
w2 = importance(fit.forest)[2]/sum(importance(fit.forest))
w3 = importance(fit.forest)[3]/sum(importance(fit.forest))
w4 = importance(fit.forest)[4]/sum(importance(fit.forest))
w5 = importance(fit.forest)[5]/sum(importance(fit.forest))
score = -diabetes$HvyAlcoholConsump * w1 - diabetes$Smoker * w2 +
diabetes$PhysActivity * w3 + diabetes$Fruits * w4 + diabetes$Veggies * w5
summary(score)
hist(score)
mean_score <- mean(score)
diabetes$score <- score
diabetes %>% filter(score <= mean_score) %>% summarise(n=n())
diabetes %>% filter(score > mean_score) %>% summarise(n=n())
sum(diabetes[diabetes$score <= mean_score,]$Diabetes_binary==1)
sum(diabetes[diabetes$score > mean_score,]$Diabetes_binary==1)
mean_score <- mean(score)
diabetes$score <- score
diabetes %>% filter(score <= mean_score) %>% summarise(n=n())
diabetes %>% filter(score > mean_score) %>% summarise(n=n())
sum(diabetes[diabetes$score <= mean_score,]$Diabetes_binary==1)
sum(diabetes[diabetes$score > mean_score,]$Diabetes_binary==1)
scoreCat <- ifelse(score > mean_score, 1, 0)
mean_score <- mean(score)
diabetes$score <- score
diabetes %>% filter(score <= mean_score) %>% summarise(n=n())
diabetes %>% filter(score > mean_score) %>% summarise(n=n())
sum(diabetes[diabetes$score <= mean_score,]$Diabetes_binary==1)
sum(diabetes[diabetes$score > mean_score,]$Diabetes_binary==1)
scoreCat <- ifelse(score > mean_score, 1, 0)
scoreCat
mean_score <- mean(score)
diabetes$score <- score
diabetes %>% filter(score <= mean_score) %>% summarise(n=n())
diabetes %>% filter(score > mean_score) %>% summarise(n=n())
sum(diabetes[diabetes$score <= mean_score,]$Diabetes_binary == 1)
sum(diabetes[diabetes$score > mean_score,]$Diabetes_binary == 1)
diabetes$scoreCat <- ifelse(score > mean_score, 1, 0)
diabetes$scoreCat
data_dir <- "~/Documents/STAT566/Project"
balanced_diabetes <- fread(file.path(data_dir, "diabetes_binary_5050split_health_indicators_BRFSS2015.csv"))
diabetes <- fread(file.path(data_dir,"diabetes_binary_health_indicators_BRFSS2015.csv"))
dim(balanced_diabetes)
balanced_diabetes[1:3,]
dim(diabetes)
diabetes[1:3,]
sum(diabetes[diabetes$score <= mean_score,]
sum(diabetes[diabetes$score <= mean_score]
sum(diabetes$score <= mean_score)
sum(diabetes[diabetes$score <= mean_score,]
sum(diabetes[diabetes$score <= mean_score,])
mean_score <- mean(score)
diabetes$score <- score
diabetes %>% filter(score <= mean_score) %>% summarise(n=n())
diabetes %>% filter(score > mean_score) %>% summarise(n=n())
sum(diabetes[diabetes$score <= mean_score,]$Diabetes_binary == 1)
sum(diabetes[diabetes$score > mean_score,]$Diabetes_binary == 1)
diabetes$scoreCat <- ifelse(score > mean_score, 1, 0)
sum(diabetes[diabetes$score <= mean_score,])
sum(diabetes$score <= mean_score)
mean_score <- mean(score)
diabetes$score <- score
diabetes %>% filter(score <= mean_score) %>% summarise(n=n())
diabetes %>% filter(score > mean_score) %>% summarise(n=n())
sum(diabetes[diabetes$score <= mean_score,]$Diabetes_binary == 1)
sum(diabetes[diabetes$score > mean_score,]$Diabetes_binary == 1)
diabetes$scoreCat <- ifelse(score > mean_score, 1, 0)
mean_score <- mean(score)
diabetes$score <- score
sum(diabetes$score <= mean_score)
sum(diabetes$score > mean_score)
sum(diabetes[diabetes$score <= mean_score,]$Diabetes_binary == 1)
sum(diabetes[diabetes$score > mean_score,]$Diabetes_binary == 1)
diabetes$scoreCat <- ifelse(score > mean_score, 1, 0)
diabetes
diabetes
glm(Diabetes_binary ~ Smoker + PhysActivity + Fruits + Veggies +
HvyAlcoholConsump, data = diabetes, family = binomial)
model_treat <- glm(Diabetes_binary ~ Smoker + PhysActivity + Fruits + Veggies +
HvyAlcoholConsump, data = diabetes, family = binomial)
model_treat <- glm(Diabetes_binary ~ Smoker + PhysActivity + Fruits + Veggies +
HvyAlcoholConsump, data = diabetes, family = binomial)
summary(model_treat)
model_treat <- glm(Diabetes_binary ~ Smoker + PhysActivity + Fruits + Veggies +
HvyAlcoholConsump, data = diabetes, family = binomial)
summary(model_treat)
model_score <- glm(Diabetes_binary ~ scoreCat, data = diabetes,
family = binomial)
summary(model_score)
model_treat <- glm(Diabetes_binary ~ Smoker + PhysActivity + Fruits + Veggies +
HvyAlcoholConsump, data = diabetes, family = binomial)
summary(model_treat)
model_score <- glm(Diabetes_binary ~ scoreCat, data = diabetes,
family = binomial)
summary(model_score)
model_treat_adj <- glm(Diabetes_binary ~ Smoker + PhysActivity + Fruits +
Veggies + HvyAlcoholConsump + Sex + Age + Income,
data = diabetes, family = binomial)
summary(model_treat)
model_score_adj <- glm(Diabetes_binary ~ scoreCat + Sex + Age + Income,
data = diabetes, family = binomial)
summary(model_score)
model_treat_adj <- glm(Diabetes_binary ~ Smoker + PhysActivity + Fruits +
Veggies + HvyAlcoholConsump + Sex + Age + Income,
data = diabetes, family = binomial)
summary(model_treat_adj)
model_score_adj <- glm(Diabetes_binary ~ scoreCat + Sex + Age + Income,
data = diabetes, family = binomial)
summary(model_score_adj)
model_treat <- glm(Diabetes_binary ~ Smoker + PhysActivity + Fruits + Veggies +
HvyAlcoholConsump, data = diabetes, family = binomial)
summary(model_treat)
model_score <- glm(Diabetes_binary ~ scoreCat, data = diabetes,
family = binomial)
summary(model_score)
knitr::opts_chunk$set(echo = TRUE)
continuous <- diabetes[,c("scoreCat", "Stroke", "HighChol", "HighBP", "BMI", "HeartDiseaseorAttack", "Education", "AnyHealthcare", "Income", "Sex", "Age", "Diabetes_binary")]
n <- nrow(continuous)
p <- ncol(continuous)
indepTest <- gaussCItest
library(Rgraphviz)
library(RBGL)
library(abind)
library(corpcor)
library(sfsmisc)
library(robustbase)
library(pcalg)
library(graph)
library(abind)
library(data.table)
plotcpdag <- "Rgraphviz" %in% print(.packages(lib.loc = .libPaths()[1]))
plotcpdag
label1 <- c("scoreCat", "Stroke", "HeartDiseaseorAttack", "Sex",
"Diabetes_binary", "Income")
label2 <- c("HighChol", "HighBP", "Education", "AnyHealthcare",
"Diabetes_binary", "scoreCat")
label3 <- c("Education", "Stroke", "HeartDiseaseorAttack", "Sex", "Income")
label4 <- c("Stroke", "HighChol", "HighBP", "HeartDiseaseorAttack",
"AnyHealthcare", "Sex")
dis1 <- diabetes[, label1]
library(Rgraphviz)
library(RBGL)
library(abind)
library(corpcor)
library(sfsmisc)
library(robustbase)
library(pcalg)
library(graph)
library(abind)
library(data.table)
plotcpdag <- "Rgraphviz" %in% print(.packages(lib.loc = .libPaths()[1]))
plotcpdag
data_dir <- "~/Desktop"
diabetes <- fread(file.path(data_dir, "Diabetes.csv"))
diabetes$scoreCat <- ifelse(diabetes$scoreCat == "> mean score", 1, 0)
attr(diabetes,"names")
dim(diabetes)
diabetes[1:3]
continuous <- diabetes[,c("scoreCat", "Stroke", "HighChol", "HighBP", "BMI",
"HeartDiseaseorAttack", "Education", "AnyHealthcare",
"Income", "Sex", "Age", "Diabetes_binary")]
n <- nrow(continuous)
p <- ncol(continuous)
indepTest <- gaussCItest
suffStat <- list(C=cor(continuous), n = n)
label_fci <- c("scoreCat", "Stroke", "HighChol", "HighBP", "BMI",
"HeartDiseaseorAttack", "Education", "AnyHealthcare", "Income",
"Sex", "Age", "Diabetes_binary")
alpha <- 0.05
fci.fit <- fci(suffStat, indepTest, labels = label_fci, alpha = alpha,
verbose = TRUE)
fci.fit@amat
if (plotcpdag) {
#dev.off()
plot(fci.fit)
}
label1 <- c("scoreCat", "Stroke", "HeartDiseaseorAttack", "Sex",
"Diabetes_binary", "Income")
label2 <- c("HighChol", "HighBP", "Education", "AnyHealthcare",
"Diabetes_binary", "scoreCat")
label3 <- c("Education", "Stroke", "HeartDiseaseorAttack", "Sex", "Income")
label4 <- c("Stroke", "HighChol", "HighBP", "HeartDiseaseorAttack",
"AnyHealthcare", "Sex")
dis1 <- diabetes[, label1]
label1 <- c("scoreCat", "Stroke", "HeartDiseaseorAttack", "Sex",
"Diabetes_binary", "Income")
label2 <- c("HighChol", "HighBP", "Education", "AnyHealthcare",
"Diabetes_binary", "scoreCat")
label3 <- c("Education", "Stroke", "HeartDiseaseorAttack", "Sex", "Income")
label4 <- c("Stroke", "HighChol", "HighBP", "HeartDiseaseorAttack",
"AnyHealthcare", "Sex")
dis1 <- diabetes[,, label1]
V1 <- colnames(dis1)
sapply(dis1, function(v) nlevels(as.factor(v)))
suffStat1 <- list(dm = dis1, nlev = c(2,2,2,2,2,8), adaptDF = FALSE)
dis2 <- diabetes[, label2]
label1 <- c("scoreCat", "Stroke", "HeartDiseaseorAttack", "Sex",
"Diabetes_binary", "Income")
label2 <- c("HighChol", "HighBP", "Education", "AnyHealthcare",
"Diabetes_binary", "scoreCat")
label3 <- c("Education", "Stroke", "HeartDiseaseorAttack", "Sex", "Income")
label4 <- c("Stroke", "HighChol", "HighBP", "HeartDiseaseorAttack",
"AnyHealthcare", "Sex")
dis1 <- diabetes[,, label1]
V1 <- colnames(dis1)
sapply(dis1, function(v) nlevels(as.factor(v)))
suffStat1 <- list(dm = dis1, nlev = c(2,2,2,2,2,8), adaptDF = FALSE)
dis2 <- diabetes[,, label2]
V2 <- colnames(dis2)
sapply(dis2, function(v) nlevels(as.factor(v)))
suffStat2 <- list(dm = dis2, nlev = c(2,2,6,2,2,2), adaptDF = FALSE)
dis3 <- diabetes[,, label3]
V3 <- colnames(dis3)
sapply(dis3, function(v) nlevels(as.factor(v)))
suffStat3 <- list(dm = dis3, nlev = c(6,2,2,2,8), adaptDF = FALSE)
dis4 <- diabetes[,, label4]
V4 <- colnames(dis4)
sapply(dis4, function(v) nlevels(as.factor(v)))
suffStat4 <- list(dm = dis4, nlev = c(2,2,2,2,2,2), adaptDF = FALSE)
dis1
dis2
dis1
dis2
dis1 <- diabetes[, c("scoreCat", "Stroke", "HeartDiseaseorAttack", "Sex",
"Diabetes_binary", "Income")]
V1 <- colnames(dis1)
sapply(dis1, function(v) nlevels(as.factor(v)))
suffStat1 <- list(dm = dis1, nlev = c(2,2,2,2,2,8), adaptDF = FALSE)
dis2 <- diabetes[, c("HighChol", "HighBP", "Education", "AnyHealthcare",
"Diabetes_binary", "scoreCat")]
V2 <- colnames(dis2)
sapply(dis2, function(v) nlevels(as.factor(v)))
suffStat2 <- list(dm = dis2, nlev = c(2,2,6,2,2,2), adaptDF = FALSE)
dis3 <- diabetes[, c("Education", "Stroke", "HeartDiseaseorAttack", "Sex",
"Income")]
V3 <- colnames(dis3)
sapply(dis3, function(v) nlevels(as.factor(v)))
suffStat3 <- list(dm = dis3, nlev = c(6,2,2,2,8), adaptDF = FALSE)
dis4 <- diabetes[, c("Stroke", "HighChol", "HighBP", "HeartDiseaseorAttack",
"AnyHealthcare", "Sex")]
V4 <- colnames(dis4)
sapply(dis4, function(v) nlevels(as.factor(v)))
suffStat4 <- list(dm = dis4, nlev = c(2,2,2,2,2,2), adaptDF = FALSE)
dis1
